"""
Python and PostgreSQL project part I:
Using the psycopg2 library to create a database and implement SELECT queries.
Overview:
1st part: This code creates a new table (deleting if currently exists), and inserts data into the newly-created table.
2nd part: implements a SELECT...WHERE query on this newly-created table.
"""

#import relevant modules
import psycopg2


#Initialize connection to database
connection = None

"""Establish the database connection, and Create a new table; then insert various rows of
data into the database. Run exceptions if an error occurs when attempting to connect to the database. 
Finally, commit the changes to the database (i.e., save the changes), and close the database connection 
once all SQL code has been implemented (assuming no errors occur).
"""

try:
    
    connection = psycopg2.connect(database="learning", user="postgres", password="*******", host="localhost", port="5433")
    
    cursor = connection.cursor()
    #Connects Ptyhon to a cursor to be able to execute postgreSQL commands.
    #Note: there are 2 sources for this table's data.
    # 1.) For the Redowod City data, the source is a 2016 Redwood City government report on the largest companies located in Redwood city:
    #URL: <https://www.redwoodcity.org/business/economic-indicators-dashboard/top-private-employers> 
    #2.) For the SF data, the source is the SFCED: <https://sfced.org/wp-content/uploads/2016/06/Largest-Employers-Jun-2016.pdf>
    
    cursor.execute("""DROP TABLE IF EXISTS companies;
                   CREATE TABLE IF NOT EXISTS companies(company_name varchar,id serial PRIMARY KEY, n_employees integer, location varchar);
                   INSERT INTO companies VALUES ('Oracle', 1, 6781,'Redwood City');
                   INSERT INTO companies VALUES ('Stanford Hospital', 2, 750,'Redwood City');
                   INSERT INTO companies VALUES ('Zazzle', 3, 190,'Redwood City');
                   INSERT INTO companies VALUES ('Sumo Logic', 4, 234,'Redwood City');
                   INSERT INTO companies VALUES ('Kaiser Foundation', 5, 773,'Redwood City');
                   INSERT INTO companies VALUES ('Rocket Fuel', 6, 312,'Redwood City');
                   INSERT INTO companies VALUES ('Genomic Health', 7, 479,'Redwood City');
                   INSERT INTO companies VALUES ('Electronic Arts', 8, 2367,'Redwood City');
                   INSERT INTO companies VALUES ('Shuttterfly', 9, 481,'Redwood City');
                   INSERT INTO companies VALUES ('Starvista', 10, 330,'Redwood City');
                   INSERT INTO companies VALUES ('Wells Fargo', 11, 8245,'San Francisco');
                   INSERT INTO companies VALUES ('Salesforce', 12, 5870,'San Francisco');
                   INSERT INTO companies VALUES ('Uber', 13, 1980,'San Francisco);
                   INSERT INTO companies VALUES ('Yelp', 14, 1717,'San Francisco');
                   INSERT INTO companies VALUES ('Google', 15, 1500,'San Francisco');
                   """)
    #NOTE: use triple quotation marks to denote where the SQL commands will be specified: this way apostrophes and such will NOT break the code.
    
except psycopg2.DatabaseError:
    #I.e., if an error happens when attempting to connect to the database, or an error from the SQL code implemented.
    if connection:
        connection.rollback()
        #I.e., do NOT commit the changes on account of an error. 
 

connection.commit()
#I.e., commits and saves the changes to the database, given there are no Database errors.



connection.close()
cursor.close()

'''Now, having created a new table with data inserted into it, run a SELECT query:'''

connection = None
#Initialises the database connection

try:
    
    connection = psycopg2.connect(database="learning", user="postgres", password="*******", host="localhost", port="5433")
    
    #Connects Python to a cursor to be able to execute postgreSQL commands.
    cursor = connection.cursor()
    
    #implement SQL query to select companies for which the number of employees is less than or equal to 750
    cursor.execute("""
                   SELECT * FROM companies WHERE n_employees<=750;
                   --queries data for companies that have employment of 750 or fewer workers;
    """)    
        
    results = cursor.fetchall()
    for res in results:
        '''I.e., iterate on the data queried while the database connection is open'''
        print(res)
        #Prints the results of the SQL query

except psycopg2.DatabaseError:
    #I.e., if an error happens when attempting to connect to the database, or an error from the SQL code implemented.
    if connection:
        connection.rollback()
        #I.e., do NOT commit the changes on account of an error. 
 

connection.commit()
#I.e., commits and saves the changes to the database, given there are no Database errors.

connection.close()
cursor.close()
('Stanford Hospital', 2, 750, 'Redwood City')
('Zazzle', 3, 190, 'Redwood City')
('SUMO LOGIC', 4, 234, 'Redwood City')
('Rocket Fuel', 6, 312, 'Redwood City')
('Genomic Health', 7, 479, 'Redwood City')
('Shuttterfly', 9, 481, 'Redwood City')
('Starvista', 10, 330, 'Redwood City')
